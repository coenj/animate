// author: CoenJanssen.net

animation["f"] = function () {

    //this part of the function uses closure, to make this functions and variables private and run once
    var shapes = [];
    var path =[
        719.19165,3.3851393,696.2204999999999,-7.3143855,691.7597699999999,6.1171875,
        703.9290699999999,23.981134,694.1954799999999,47.19149,694.5449199999999,66.146484,
        686.6039299999999,85.781952,704.3763399999999,95.706536,719.09961,101.36523,
        720.38884,108.5609,709.76111,107.79178999999999,714.81445,121.29102,
        728.79048,150.46539,687.90207,139.74044,675.74414,157.3418,
        655.29921,172.25303,636.02832,190.94143,613.40625,201.79297,
        619.25505,196.50325,628.418,185.94283,633.37891,181.5,
        655.36545,165.58781,647.5743600000001,138.42116,651.49414,114.11523,
        659.75991,65.042553,620.30486,93.415651,602.4550800000001,115.70116999999999,
        612.5236500000001,98.726327,585.0839900000001,85.753626,594.64453,69.47656199999999,
        614.63846,38.96628999999999,571.50246,50.63817299999999,594.8769500000001,32.142577999999986,
        603.3636100000001,24.155726999999985,612.3683100000001,-2.2326467000000108,590.8496100000001,6.900390599999987,
        582.6188000000001,17.796638999999985,594.4123400000001,29.67724199999999,577.9257800000001,43.373046999999985,
        592.6157500000002,57.280782999999985,588.4748000000002,69.24877799999999,590.4414100000001,92.17187499999999,
        601.8441500000001,104.20506999999998,581.6446800000001,123.20669999999998,593.8144500000001,135.15429999999998,
        606.6371300000001,136.93438999999998,620.3529800000001,133.29421999999997,631.6503900000001,127.04491999999998,
        642.3272400000001,132.14328999999998,631.8867600000001,162.18928999999997,629.4003900000001,175.63867,
        623.9729500000001,187.96169999999998,594.3937100000002,190.30885999999998,587.0351600000001,209.25781,
        569.2691300000001,222.07413,557.5269100000002,248.08688,537.5918000000001,263.6875,
        513.6641500000002,276.80473,509.24706000000015,319.40761,482.93945000000014,320.21094,
        484.6402600000001,327.20894,477.0095900000001,362.70944,497.4687500000001,377.5293,
        488.00026000000014,413.25969,485.7009600000001,452.56397,468.0000000000001,486.34765999999996,
        437.5148400000001,510.28671999999995,477.8476700000001,564.0548299999999,447.2812500000001,571.6757799999999,
        432.93184000000014,598.5398899999999,380.0854700000001,641.36381,425.2500000000001,664.23047,
        421.11425000000014,693.0732399999999,415.68909000000014,728.94553,407.7168000000001,759.43164,
        395.8774800000001,804.51306,396.5895500000001,852.37694,402.4589800000001,897.7519500000001,
        391.9559900000001,930.9975700000001,437.1167000000001,913.5687100000001,422.56641000000013,930.8476600000001,
        408.91911000000016,981.4792400000001,400.93548000000015,1034.1303,382.15820000000014,1083.5957,
        360.3425300000001,1104.7714,369.12548000000015,1117.2657000000002,395.56641000000013,1099.3867,
        419.68564000000015,1053.164,422.8806500000001,999.5689,431.23242000000016,948.90234,
        422.89311000000015,921.62377,448.7430400000002,916.79766,432.86719000000016,897.90234,
        454.67024000000015,919.04873,501.30069000000015,912.90715,506.37500000000017,879.08203,
        525.4050100000002,832.5857900000001,495.85765000000015,874.5532000000001,477.1191400000002,887.70117,
        454.20252000000016,901.32065,458.2057100000002,891.32907,451.73242000000016,886.20117,
        410.3905100000002,890.74647,417.3727900000002,835.6777400000001,418.7988300000002,806.28125,
        439.2608700000002,746.74021,451.75881000000015,684.10714,478.6347700000002,627.18164,
        461.62559000000016,633.0123600000001,479.29598000000016,581.40006,483.34180000000015,614.49609,
        494.98881000000017,656.5964,490.7468700000002,700.22537,508.69141000000013,741.00195,
        513.7160700000002,775.98041,550.4903500000001,811.91485,537.7324200000002,843.51172,
        523.3742300000001,859.74209,519.4868700000002,898.48358,506.27734000000015,904.3945299999999,
        476.02890000000014,923.2512399999999,525.3254800000002,973.8388699999999,489.6113300000002,1001.9354999999999,
        472.2534600000002,1031.0626,464.95128000000017,1068.0842,437.93555000000015,1090.0293,
        458.17908000000017,1100.7284,423.73470000000015,1118.0006999999998,417.75000000000017,1139.6738,
        398.3683100000002,1177.675,396.5283800000002,1104.3342,383.24805000000015,1139.252,
        376.35889000000014,1180.8753,409.49757000000017,1154.9461999999999,423.83203000000015,1154.4023,
        420.90775000000014,1178.7112,429.3760100000001,1223.9971,397.15039000000013,1216.3202999999999,
        383.63404000000014,1193.4723999999999,363.8927900000001,1174.2819,339.5996100000001,1163.2558999999999,
        335.6174400000001,1142.7803999999999,277.5891200000001,1131.9698999999998,301.1992200000001,1126.8241999999998,
        333.1103500000001,1134.4341999999997,368.2836800000001,1142.2473999999997,392.4003900000001,1112.6601999999998,
        369.21837000000005,1114.6313999999998,321.4473500000001,1122.6110999999999,288.1503900000001,1117.9901999999997,
        260.7519200000001,1141.1977999999997,319.0960800000001,1162.5320999999997,335.4003900000001,1180.9628999999998,
        371.49266000000006,1190.1333999999997,390.1568200000001,1276.7830999999996,430.50000000000006,1223.8222999999998,
        443.21535000000006,1206.8692999999998,442.59177000000005,1186.9234999999999,435.32227000000006,1166.9530999999997,
        421.96439000000004,1134.4184999999998,465.53425000000004,1117.2715999999998,474.51953000000003,1088.3202999999996,
        483.39926,1060.3614999999995,504.52633000000003,1043.9462999999996,520.59375,1021.2870999999997,
        527.23968,1011.7021999999997,527.08484,1004.0091999999996,531.27539,991.7206999999996,
        539.17477,962.4565999999996,544.14734,942.8295999999996,537.89844,912.7519499999996,
        533.03024,890.9531499999996,556.05255,873.3872599999996,555.03516,849.3769499999996,
        567.60479,866.1750099999996,597.60694,901.0936199999996,578.01172,929.3183599999996,
        612.06444,946.9013299999997,569.63889,993.9863099999997,588.83008,1029.9940999999997,
        601.10993,1066.0912999999996,598.63423,1103.3351999999998,605.4082,1141.9511999999997,
        601.5182599999999,1170.0212999999997,643.12099,1210.6865999999998,610.79688,1227.5116999999998,
        578.70045,1244.3802999999998,543.07345,1262.6249999999998,511.19921999999997,1246.9354999999998,
        479.68384,1236.8583999999998,459.28376999999995,1294.3318,490.53319999999997,1304.9589999999998,
        517.02572,1310.6450999999997,538.73335,1324.0845,566.29297,1325.1952999999999,
        573.77658,1325.3481,581.33619,1325.4314,588.44922,1322.7187999999999,
        632.29881,1315.1546999999998,677.26015,1312.1157999999998,721.2656199999999,1304.9198999999999,
        747.6822799999999,1283.1751,771.5593899999999,1256.9136999999998,755.6992199999999,1219.0176,
        742.9671299999999,1187.6933,698.1856899999998,1166.2724999999998,712.9003899999999,1128.2479999999998,
        714.2979799999999,1101.2872999999997,736.2423499999999,1078.7749,746.7109399999999,1053.7499999999998,
        760.7562499999999,1023.9367999999997,764.7222399999999,982.1973299999997,761.9355499999999,955.2617199999997,
        755.8458899999999,945.9498199999997,744.6011699999999,938.9935599999998,738.3007799999999,928.5546899999997,
        729.36038,919.0145799999997,732.7747999999999,906.0967399999997,723.8320299999999,894.8906199999997,
        695.2297899999999,880.1708799999997,719.6820799999999,844.1301999999997,710.7382799999999,818.7246099999996,
        712.1780399999999,778.1339399999996,710.3439799999999,736.0657199999996,686.3984399999999,701.6992199999996,
        647.76335,663.1112599999997,720.1169399999999,650.3358799999996,738.19531,620.9941399999997,
        759.72435,604.6208799999997,760.55927,573.6104799999997,782.4101599999999,562.3398399999996,
        809.8974699999999,528.3705099999996,788.6904599999999,477.29838999999964,752.2109399999999,458.80077999999963,
        727.62133,434.2340099999996,761.2717899999999,425.6161899999996,784.0195299999999,415.49999999999966,
        806.5829399999999,401.46313999999967,840.1432299999999,424.19179999999966,853.26172,395.3164099999997,
        872.40059,372.5484799999997,823.08066,350.9578199999997,835.44531,317.3886699999997,
        839.8808899999999,285.6154299999997,806.59665,254.2887599999997,807.06445,230.2617199999997,
        818.03832,202.80577999999971,817.4674,163.5809299999997,784.2207,152.7402299999997,
        753.27436,157.98032999999973,762.40698,108.53365999999971,734.10547,114.53905999999972,
        724.65865,94.39076599999973,768.2287299999999,63.78525499999972,757.80273,30.156249999999716,
        763.00923,9.705127699999714,759.43904,-1.199906800000285,744.10352,-1.4531250000002842
           ];
        var dropPoints=1;
        
    function linePoint() {

    }

    function linePoint(x, y) {
        this.x = x;
        this.y = y;
    }

    linePoint.prototype = {
        x: 10,
        y: 10,
        speedX: 4,
        speedY: 4,
        update: function () {
            if (this.x + this.speedX > canvas.width || this.x + this.speedX < 0) {
                this.speedX = -this.speedX;
                                            }
            if (this.y + this.speedY > canvas.height || this.y + this.speedY < 0){ this.speedY = -this.speedY
            dropPoints+= Math.round(Math.random()*2);
                if(dropPoints>24) dropPoints=1;
      
    }
},
        moveX: function () { this.x += this.speedX },
        moveY: function () { this.y += this.speedY },
    }

    function initPoints() {
        var array = [];

        for (i=0; i< path.length; i+=2) {
            posX =path[i];
            posY =path[i+1]
            array.push(new linePoint(posX, posY));
        }

        return array;
    }

    function Shape() {
        this.linePoints = initPoints();
    }

    function Shape(fillStyle, stroke, lineWidth, x, y, //linePoints
    ) {
        this.fillStyle = fillStyle;
        this.stroke = stroke;
        this.lineWidth= lineWidth;
        // this.linePoints = this.linePoints;
        this.x = x;
        this.y = y;
        this.linePoints = initPoints();
    }

    Shape.prototype = {
        linePoints: [],
        fillStyle: 'blue',
        stroke: 'yellow',
        x: 10,
        y: 10,
    }


    function setup() {

        shape = new Shape(`rgba(254,254, 254, 0.5)`, 'black',5, 0, 120);

        shapes.push(shape);
        
    }

    
    function drawLines(point) {
        point.update();
        point.moveX();
        point.moveY();
        ctx.lineTo(point.x, point.y);
    }

    function drawBeziers(cp1, cp2, point) {
        point.update();
        point.moveX();
        point.moveY();
        ctx.bezierCurveTo(cp1.x, cp1.y, cp2.x, cp2.y, point.x, point.y);
    }

    function draw(shape) {
        
        ctx.beginPath();
        ctx.moveTo(shape.linePoints[0].x, shape.linePoints[0].y);
        
        
        o = shape;

        for(var i=0; i< o.linePoints.length-2; i+=3*dropPoints){

            drawBeziers(o.linePoints[i], o.linePoints[i+1], o.linePoints[i+2]);
        }
        
        ctx.closePath();

        ctx.fillStyle = shape.fill; //`rgba(0,128, 128, 0.5)`;
        ctx.strokeStyle = shape.strokeStyle;
        ctx.fillStyle = shape.fillStyle;
        ctx.stroke();
        ctx.fill();
    }

/*
    function draw(shape) {
        
        ctx.beginPath();
        ctx.moveTo(shape.linePoints[0], shape.linePoints[1]);
        shape.linePoints.forEach(drawLines);
        ctx.closePath();

        //ctx.fillStyle = shape.fill; //`rgba(0,128, 128, 0.5)`;
        ctx.strokeStyle = shape.stroke;
        ctx.fillStyle=shape.fillStyle;
        ctx.lineWidth=shape.lineWidth;
        ctx.stroke();
        ctx.fill();
    }
  */
    function drawAll() {
        shapes.forEach(draw);
    }



    setup();
    
    // below is the only public part of the function
    return function () {           
        drawAll(shapes);
    }
}();

animation["f"].play=true;

